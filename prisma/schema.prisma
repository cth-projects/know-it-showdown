// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Game {
  gameCode  String   @id
  upstashId String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  game0To100 Game0To100?

  @@index([upstashId])
}

// Example
model Post {
  id        Int      @id @default(autoincrement())
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([name])
}

// Game 0-100 models *******************************************************************
enum Game0To100State {
  LOBBY
  QUESTION
  RESULT
  FINAL_RESULT
}

enum Game0To100CategoryType {
  DEFAULT
  HEALTH
  EDUCATION
  WATER
  ENERGY
  EMPLOYMENT
  TECHNOLOGY
  URBAN_DEVELOPMENT
  ENVIRONMENT
}

model Game0To100 {
  gameCode             String          @id
  gameState            Game0To100State @default(LOBBY)
  currentQuestionIndex Int             @default(0)
  createdAt            DateTime        @default(now())
  updatedAt            DateTime        @updatedAt

  game      Game                 @relation(fields: [gameCode], references: [gameCode], onDelete: Cascade)
  players   Game0To100Player[]
  questions Game0To100Question[]
}

model Game0To100Player {
  name          String
  gameCode      String
  score         Int    @default(0)
  playerAnswers Int[]

  game Game0To100 @relation(fields: [gameCode], references: [gameCode], onDelete: Cascade)

  @@id([name, gameCode])
}

model Game0To100Category {
  name String @id
  // TODO: add category info used to display info about the UN goal

  questions Game0To100Question[]
}

model Game0To100Question {
  id           Int      @id @default(autoincrement())
  question     String   @unique
  answer       Int
  categoryName String   @map("category")
  updatedAt    DateTime @updatedAt

  category Game0To100Category @relation(fields: [categoryName], references: [name])
  games    Game0To100[]
}

// ***************************************************************************************
