/* eslint-disable @typescript-eslint/no-misused-promises */

import { getSDGCategories } from "@/lib/sdg-categories";
import { PrismaClient } from "@prisma/client";
import { Game0To100State, Game0To100CategoryType } from "@prisma/client";

const prisma = new PrismaClient();

async function main() {
  console.log("Removing games and questions..");

  await prisma.$transaction([
    prisma.game.deleteMany(),
    prisma.game0To100Question.deleteMany(),
  ]);

  console.log("Seeding database...");

  const categories = getSDGCategories();

  for (const categoryData of categories) {
    await prisma.game0To100Category.upsert({
      where: { name: categoryData.name },
      update: categoryData,
      create: categoryData,
    });
  }

  const sampleQuestions = [
    // SDG 1: POVERTY
    {
      question:
        "What percentage of the world's population lives in extreme poverty (less than $2.15/day)?",
      answer: 9,
      categoryName: Game0To100CategoryType.POVERTY,
    },
    {
      question:
        "What percentage of people in sub-Saharan Africa live below the poverty line?",
      answer: 40,
      categoryName: Game0To100CategoryType.POVERTY,
    },

    // SDG 2: HUNGER
    {
      question:
        "What percentage of the global population suffers from moderate or severe food insecurity?",
      answer: 30,
      categoryName: Game0To100CategoryType.HUNGER,
    },
    {
      question:
        "What percentage of children under 5 are affected by stunting due to malnutrition?",
      answer: 22,
      categoryName: Game0To100CategoryType.HUNGER,
    },

    // SDG 3: HEALTH
    {
      question: "What percentage of the human body is approximately water?",
      answer: 60,
      categoryName: Game0To100CategoryType.HEALTH,
    },
    {
      question:
        "What is the normal human body temperature in Fahrenheit? (Rounded)",
      answer: 98,
      categoryName: Game0To100CategoryType.HEALTH,
    },

    // SDG 4: EDUCATION
    {
      question: "What percentage of the world's population can read and write?",
      answer: 86,
      categoryName: Game0To100CategoryType.EDUCATION,
    },
    {
      question: "What percentage of children globally complete primary school?",
      answer: 91,
      categoryName: Game0To100CategoryType.EDUCATION,
    },

    // SDG 5: GENDER
    {
      question:
        "What percentage of national parliamentarians globally are women?",
      answer: 26,
      categoryName: Game0To100CategoryType.GENDER,
    },
    {
      question:
        "What percentage of women worldwide have experienced physical or sexual violence?",
      answer: 30,
      categoryName: Game0To100CategoryType.GENDER,
    },

    // SDG 6: WATER
    {
      question: "What percentage of Earth's surface is covered by water?",
      answer: 71,
      categoryName: Game0To100CategoryType.WATER,
    },
    {
      question:
        "What percentage of adults globally have access to clean drinking water?",
      answer: 90,
      categoryName: Game0To100CategoryType.WATER,
    },

    // SDG 7: ENERGY
    {
      question:
        "What percentage of global energy comes from renewable sources?",
      answer: 30,
      categoryName: Game0To100CategoryType.ENERGY,
    },
    {
      question:
        "What percentage of the global population has access to electricity?",
      answer: 91,
      categoryName: Game0To100CategoryType.ENERGY,
    },

    // SDG 8: EMPLOYMENT
    {
      question: "What percentage of the global workforce is unemployed?",
      answer: 6,
      categoryName: Game0To100CategoryType.EMPLOYMENT,
    },
    {
      question: "What percentage of the global workforce works in agriculture?",
      answer: 27,
      categoryName: Game0To100CategoryType.EMPLOYMENT,
    },

    // SDG 9: TECHNOLOGY
    {
      question:
        "What percentage of the world's population has internet access?",
      answer: 65,
      categoryName: Game0To100CategoryType.TECHNOLOGY,
    },
    {
      question: "What percentage of the global population owns a smartphone?",
      answer: 68,
      categoryName: Game0To100CategoryType.TECHNOLOGY,
    },

    // SDG 10: INEQUALITY
    {
      question:
        "What percentage of global wealth is owned by the richest 1% of the population?",
      answer: 45,
      categoryName: Game0To100CategoryType.INEQUALITY,
    },
    {
      question:
        "What percentage of global income goes to the poorest 50% of the population?",
      answer: 8,
      categoryName: Game0To100CategoryType.INEQUALITY,
    },

    // SDG 11: URBAN_DEVELOPMENT
    {
      question:
        "What percentage of the world's population lives in urban areas?",
      answer: 55,
      categoryName: Game0To100CategoryType.URBAN_DEVELOPMENT,
    },
    {
      question: "What percentage of global GDP is generated by cities?",
      answer: 80,
      categoryName: Game0To100CategoryType.URBAN_DEVELOPMENT,
    },

    // SDG 12: CONSUMPTION
    {
      question: "What percentage of global food production is wasted or lost?",
      answer: 30,
      categoryName: Game0To100CategoryType.CONSUMPTION,
    },
    {
      question: "What percentage of plastic waste is recycled globally?",
      answer: 9,
      categoryName: Game0To100CategoryType.CONSUMPTION,
    },

    // SDG 13: CLIMATE
    {
      question:
        "By what percentage have global CO2 emissions increased since 1990?",
      answer: 60,
      categoryName: Game0To100CategoryType.CLIMATE,
    },
    {
      question:
        "What percentage of countries have submitted climate action plans?",
      answer: 95,
      categoryName: Game0To100CategoryType.CLIMATE,
    },

    // SDG 14: OCEANS
    {
      question: "What percentage of global fish stocks are overfished?",
      answer: 35,
      categoryName: Game0To100CategoryType.OCEANS,
    },
    {
      question: "What percentage of marine areas are protected globally?",
      answer: 8,
      categoryName: Game0To100CategoryType.OCEANS,
    },

    // SDG 15: ENVIRONMENT
    {
      question: "What percentage of Earth's atmosphere is nitrogen? (Rounded)",
      answer: 78,
      categoryName: Game0To100CategoryType.ENVIRONMENT,
    },
    {
      question: "What percentage of the Amazon rainforest has been deforested?",
      answer: 17,
      categoryName: Game0To100CategoryType.ENVIRONMENT,
    },

    // SDG 16: PEACE
    {
      question:
        "What percentage of the world's population lives in countries affected by conflict?",
      answer: 25,
      categoryName: Game0To100CategoryType.PEACE,
    },
    {
      question: "What percentage of global births are registered?",
      answer: 75,
      categoryName: Game0To100CategoryType.PEACE,
    },

    // SDG 17: PARTNERSHIPS
    {
      question:
        "What percentage of official development assistance goes to least developed countries?",
      answer: 30,
      categoryName: Game0To100CategoryType.PARTNERSHIPS,
    },
    {
      question:
        "What percentage of developing countries have national statistical plans?",
      answer: 55,
      categoryName: Game0To100CategoryType.PARTNERSHIPS,
    },
  ];

  for (const questionData of sampleQuestions) {
    await prisma.game0To100Question.upsert({
      where: { question: questionData.question },
      update: {},
      create: questionData,
    });
  }

  const testGames = [
    {
      gameCode: "LOBBY1",
      upstashId: "upstash-lobby-test",
      gameState: Game0To100State.LOBBY,
      currentQuestionIndex: 0,
      players: [
        { name: "Player1", score: 0, playerAnswers: [] },
        { name: "Player2", score: 0, playerAnswers: [] },
      ],
    },
    {
      gameCode: "QUEST1",
      upstashId: "upstash-question-test",
      gameState: Game0To100State.QUESTION,
      currentQuestionIndex: 2,
      players: [
        { name: "Alice", score: 15, playerAnswers: [71, 0] },
        { name: "Bob", score: 25, playerAnswers: [70, 0] },
        { name: "Charlie", score: 10, playerAnswers: [75, 5] },
        { name: "Alice1", score: 15, playerAnswers: [71, 0] },
        { name: "Bob1", score: 25, playerAnswers: [70, 0] },
        { name: "Charlie1", score: 10, playerAnswers: [75, 5] },
        { name: "Alice2", score: 15, playerAnswers: [71, 0] },
        { name: "Bob2", score: 25, playerAnswers: [70, 0] },
        { name: "Charlie2", score: 10, playerAnswers: [75, 5] },
        { name: "Alice3", score: 15, playerAnswers: [71, 0] },
      ],
    },
    {
      gameCode: "RESULT",
      upstashId: "upstash-result-test",
      gameState: Game0To100State.RESULT,
      currentQuestionIndex: 2,
      players: [
        { name: "Dave", score: 45, playerAnswers: [71, 0, 60] },
        { name: "Emma", score: 35, playerAnswers: [70, 2, 65] },
      ],
    },
    {
      gameCode: "FINAL1",
      upstashId: "upstash-final-test",
      gameState: Game0To100State.FINAL_RESULT,
      currentQuestionIndex: 4,
      players: [
        { name: "Alice", score: 15, playerAnswers: [71, 0] },
        { name: "Bob", score: 25, playerAnswers: [70, 0] },
        { name: "Charlie", score: 10, playerAnswers: [75, 5] },
        { name: "Alice1", score: 15, playerAnswers: [71, 0] },
        { name: "Bob1", score: 25, playerAnswers: [70, 0] },
        { name: "Charlie1", score: 10, playerAnswers: [75, 5] },
        { name: "Alice2", score: 15, playerAnswers: [71, 0] },
        { name: "Bob2", score: 25, playerAnswers: [70, 0] },
        { name: "Charlie2", score: 10, playerAnswers: [75, 5] },
        { name: "Alice3", score: 15, playerAnswers: [71, 0] },
      ],
    },
  ];

  const questions = await prisma.game0To100Question.findMany({
    take: 5,
  });

  for (const testGame of testGames) {
    await prisma.game.upsert({
      where: { gameCode: testGame.gameCode },
      update: {},
      create: {
        gameCode: testGame.gameCode,
        upstashId: testGame.upstashId,
      },
    });

    await prisma.game0To100.upsert({
      where: { gameCode: testGame.gameCode },
      update: {
        gameState: testGame.gameState,
        currentQuestionIndex: testGame.currentQuestionIndex,
      },
      create: {
        gameCode: testGame.gameCode,
        gameState: testGame.gameState,
        currentQuestionIndex: testGame.currentQuestionIndex,
        questions: {
          connect: questions.map((q) => ({ id: q.id })),
        },
      },
    });

    for (const playerData of testGame.players) {
      await prisma.game0To100Player.upsert({
        where: {
          name_gameCode: {
            name: playerData.name,
            gameCode: testGame.gameCode,
          },
        },
        update: {
          score: playerData.score,
          playerAnswers: playerData.playerAnswers,
        },
        create: {
          name: playerData.name,
          gameCode: testGame.gameCode,
          score: playerData.score,
          playerAnswers: playerData.playerAnswers,
        },
      });
    }
  }

  console.log(
    "Database seeded with:",
    `\n- ${categories.length} categories with UN SDG information`,
    `\n- ${sampleQuestions.length} questions`,
    `\n- ${testGames.length} test games: LOBBY1, QUEST1, RESULT, FINAL1`,
  );
}

main()
  .catch((e) => {
    console.error(e);
    process.exit(1);
  })
  .finally(async () => {
    await prisma.$disconnect();
  });
